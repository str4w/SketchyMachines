# the other kind of pentest :-)
# 8 pens, 8.5 x 11 sheet
# 1/2 inch margin
# 1 half inch for titles 
# columns for drawings will be
# row height 1000 to 7500 in 4: 1000 2625 4250 5875 7500
# col widths 500 to 10500 in 4 500 3000 5500 8000 10500 
# 
# Pen Names
pen[1]="   1. Pen One    "
pen[2]="   2. Pen Two    "
pen[3]="  3. Pen Three   "
pen[4]="  4. Pen Four    "
pen[5]="  5. Pen Five    "
pen[6]="   6. Pen Six    "
pen[7]="  7. Pen Seven   "
pen[8]="  8. Pen Eight   "

drawings[0]="Drawings/Chernoff/chernoffs_00.lines"
drawings[1]="Drawings/Chernoff/chernoffs_01.lines"

font=timesr
maxpen=8
spacing=0.01
textxoffset=0.02
textyoffset=0.05

eighths=(0.0 0.125 0.250 0.375 0.5 0.625 0.750 0.875 1.0)

columns=(0.0 0.25 0.5 0.75 1.0)
rows=(0.066667 0.283333 0.5 0.7166667 0.933333)

# make a frame with correct aspect ratio
echo "500 500 10500 500 10500 8000 500 8000 500 500" >/tmp/outerframe.lines
# guidelines, remove later
echo "PEN 2" >>/tmp/outerframe.lines
echo "500 1000 10500 1000" >>/tmp/outerframe.lines
echo "PEN 3" >>/tmp/outerframe.lines
echo "500 7500 10500 7500" >>/tmp/outerframe.lines
echo "PEN 4" >>/tmp/outerframe.lines
echo "500 2625 10500 2625" >>/tmp/outerframe.lines
echo "PEN 5" >>/tmp/outerframe.lines
echo "500 4250 10500 4250" >>/tmp/outerframe.lines
echo "PEN 6" >>/tmp/outerframe.lines
echo "500 5875 10500 5875" >>/tmp/outerframe.lines
echo "PEN 7" >>/tmp/outerframe.lines
echo "3000 500 3000 7500" >>/tmp/outerframe.lines
echo "PEN 1" >>/tmp/outerframe.lines
echo "5500 500 5500 7500" >>/tmp/outerframe.lines
echo "PEN 2" >>/tmp/outerframe.lines
echo "8000 500 8000 7500" >>/tmp/outerframe.lines

echo "The other kind of pen test $(date +%Y.%m.%d)" >/tmp/headline.txt
python PlotterTests/text2lines.py $font /tmp/headline.txt /tmp/headline.lines
python PlotterTests/compositelines.py --fix_aspect /tmp/outerframe.lines 0 .95 1 .9833 /tmp/headline.lines /tmp/tmp.lines
mv /tmp/tmp.lines /tmp/output.lines
for i in 1 2 3 4 5 6 7 8
do
   echo "${pen[$i]}" >/tmp/pen${i}title.txt
   python PlotterTests/text2lines.py $font /tmp/pen${i}title.txt /tmp/pen${i}title.lines
   python PlotterTests/compositelines.py --scale 5. --pen_shift $(( $i - 1 )) /tmp/output.lines ${eighths[$(( $i - 1 ))]} .0125 ${eighths[$i]} .0325 /tmp/pen${i}title.lines /tmp/tmp.lines
   mv /tmp/tmp.lines /tmp/output.lines
done

for r in 0 1 2 3
do
    for c in 0 1 2 3
    do
        pen=$(( ( $c * 4 + ( $r + $c + $c / 2  ) % 4 ) % $maxpen ))
        drawing=$((  ( $r % 2 + $c % 2 ) % 2  ))
        echo $r $c $pen $drawing
        tclow=$(echo ${columns[$(( $c + 1 ))]} - $textyoffset - $spacing |bc)
        tchigh=$(echo ${columns[$(( $c + 1 ))]} - $textyoffset + $spacing |bc)
        trlow=$(echo ${rows[$r]} + $textxoffset - $spacing |bc)
        trhigh=$(echo ${rows[$r]} + $textxoffset + $spacing |bc)

        clow=$(echo ${columns[$c]} + $spacing |bc)
        chigh=$(echo ${columns[$(( $c + 1))]} - $spacing |bc)
        rlow=$(echo ${rows[$r]} + $spacing |bc)
        rhigh=$(echo ${rows[$(( $r + 1))]} - $spacing |bc)

        echo "Pen $(( $pen + 1 ))" >/tmp/pen.txt
        python PlotterTests/text2lines.py --justification right $font /tmp/pen.txt /tmp/pen.lines


        python PlotterTests/compositelines.py --scale 2.5 --pen_shift $pen /tmp/output.lines ${tclow} ${trlow} ${tchigh} ${trhigh} /tmp/pen.lines /tmp/tmp.lines
        mv /tmp/tmp.lines /tmp/output.lines

        python PlotterTests/compositelines.py --fix_aspect --pen_shift $pen /tmp/output.lines ${clow} ${rlow} ${chigh} ${rhigh} ${drawings[$drawing]} /tmp/tmp.lines
        mv /tmp/tmp.lines /tmp/output.lines
    done
done

# to hpgl
python PlotterTests/lines2render.py /tmp/output.lines 500 500 10500 8000 pentest.hpgl



